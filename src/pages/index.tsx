import { type NextPage } from "next";
import Head from "next/head";

import type { RouterOutputs } from "~/utils/api";
import { api } from "~/utils/api";
import { SignInButton, useUser } from "@clerk/nextjs";

import dayjs from 'dayjs';
import relativeTime from 'dayjs/plugin/relativeTime';
import Image from "next/image";

import LoadingPage from '../components/loading';

dayjs.extend(relativeTime);

const CreatePostWizard = () => {
  const { user } = useUser();
  if(!user) return null;
  return <div className="flex w-full gap-3">
    <Image 
      src={user.profileImageUrl} 
      alt='Profile Image' 
      width={64} height={64} 
      className='h-16 w-16 rounded-full' />
    <input placeholder="Enter your thoughts!" className="grow px-2 bg-transparent outline-none"/>
  </div>
}

type PostWithUser = RouterOutputs['posts']['getAll'][number];

const PostViewComponent = (props: PostWithUser) => {

  const { post, author } = props;

  return <div key={post.id} className="flex p-4 border-b border-slate-400 gap-3"> 
  <Image 
    src={author?.profilePicture} 
    alt={`${author.username} Profile Picture`} 
    width={56} height={56} 
    className='h-14 w-14 rounded-full' />
  <div className="flex flex-col ">
    <div className="flex flex-row text-slate-300 gap-1">
      <span>{`@${author.username}`}</span>
      <span>{`- ${dayjs(post.createdAt).fromNow()}`}</span>
    </div>
      <span className="text-xl">{post.content}</span>
  </div>
  </div>;
}

const FeedComponent = () => {
  const { data, isLoading } = api.posts.getAll.useQuery();
  
  if (isLoading) return <LoadingPage size={60}/>

  if(!data) return <div> Something went wrong! </div>

  return (<div className="flex flex-col">
  {[...data]?.map((data) => <PostViewComponent key={data.post.id} {...data}/>)}
</div>)
}

const Home: NextPage = () => {
  const {isLoaded: userLoaded, isSignedIn} = useUser();

  if(!userLoaded) return <></>

  //Start fetching data, so Feed component can use cache data
  api.posts.getAll.useQuery();
  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex justify-center h-screen">
        <div className="bg-blue-500 w-full h-full md:max-w-2xl border-x border-slate-400">
          <div className="flex border-b border-slate-400 p-4">
              {!isSignedIn && <SignInButton />}
              {!!isSignedIn && <CreatePostWizard />}
          </div>
          <FeedComponent />
        </div>
      </main>
    </>
  );
};

export default Home;
